{"version":3,"sources":["components/PlayerShaka/style.module.css","components/PlayerBasic/style.module.css","components/Spinner/index.jsx","components/Home/index.jsx","components/PlayerShaka/index.jsx","config.js","api/codecMap.js","api/transcoder.js","components/PlayerBasic/index.jsx","components/App/index.jsx","index.js","components/Home/style.module.css","components/Spinner/style.module.css"],"names":["module","exports","Spinner","className","style","spinner","Home","onChange","loading","value","home","field","defaultValue","readOnly","placeholder","onKeyDown","e","keyCode","target","message","PlayerShaka","props","ref","React","createRef","this","player","autoPlay","width","height","controls","Shaka","polyfill","installAll","Player","isBrowserSupported","current","configure","streaming","retryParameters","timeout","maxAttempts","baseDelay","backoffFactor","fuzzFactor","addEventListener","event","console","error","detail","code","load","url","then","log","catch","window","_player","Component","API_URL","testCodec","type","document","createElement","canPlayType","canPlayAc3","canPlayEc3","canPlayOpus","canPlayFlac","canPlayVorbis","canPlayHevc","canPlayAv1","canPlayVp8","canPlayVp9","createCompatibilityMap","format","container","video","codec","audio","maxAudioTrack","maxVideoTrack","analyze","a","async","data","fetch","method","headers","body","JSON","stringify","supported","d","json","start","profile","videoTrack","audioTracks","subtitle","PlayerBasic","src","App","useState","setUrl","session","setSession","newUrl","localStorage","setItem","maxBitrate","profiles","filter","p","bitrate","length","id","tracks","map","startData","autoStart","getItem","stream","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.76d50af9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"style_player__19nHK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"style_player__wFyAB\"};","import React from 'react';\r\nimport style from './style.module.css';\r\n\r\nconst Spinner = () => <div className={style.spinner}><div/><div/><div/><div/></div>;\r\n\r\nSpinner.propTypes = {\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './style.module.css';\r\nimport Spinner from '../Spinner';\r\n\r\nconst Home = ({ onChange = () => { }, loading = false, value = '' }) => <div className={style.home}>\r\n    <input className={style.field} defaultValue={value} readOnly={loading} placeholder=\"https://mywebsite.com/myfile.mkv\" onKeyDown={(e) => { if (e.keyCode === 13) { onChange(e.target.value); } }} />\r\n     <div className={style.message}>(Default bitrate: 10Mbit/s)</div>    \r\n     <div className={style.message}>It's easy! Paste a media file link and press enter ;)</div>\r\n    {loading && <Spinner />}\r\n</div>;\r\n\r\nHome.propTypes = {\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport Shaka from 'shaka-player';\r\nimport PropTypes from 'prop-types';\r\nimport style from './style.module.css';\r\nimport Spinner from '../Spinner';\r\n\r\nclass PlayerShaka extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.ref = React.createRef();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <video ref={this.ref} className={style.player} autoPlay width=\"1920\" height=\"1080\" controls/>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Install polyfills\r\n        Shaka.polyfill.installAll();\r\n\r\n        // Test compatibility\r\n        if (!Shaka.Player.isBrowserSupported()) {\r\n            console.error('Browser not supported!');\r\n            return;\r\n        }\r\n\r\n        // Init Shaka Player\r\n        const player = new Shaka.Player(this.ref.current);\r\n        player.configure({\r\n            streaming: {\r\n                retryParameters: {\r\n                    timeout: 10000,\r\n                    maxAttempts: 50,\r\n                    baseDelay: 0,\r\n                    backoffFactor: 0,\r\n                    fuzzFactor: 0,\r\n                }\r\n            }\r\n        });\r\n\r\n        // Error handling\r\n        player.addEventListener('error', (event) => {\r\n            console.error('Error code', event.detail.code, 'object', event.detail);\r\n        });\r\n        player.load(this.props.url).then(() => {\r\n            console.log('The video has now been loaded!');\r\n        }).catch((error) => {\r\n            console.error('Error code', error.code, 'object', error);\r\n        });\r\n\r\n        // Assign to window to enable debug \r\n        window._player = player;\r\n    }\r\n}\r\n\r\nPlayerShaka.propTypes = {\r\n    url: PropTypes.string\r\n};\r\n\r\nexport default PlayerShaka;\r\n","export const API_URL = 'http://localhost:8585/';","const testCodec = (type) => {\r\n    return document.createElement('video').canPlayType(type);\r\n}\r\n\r\n// Audio codec detection\r\nconst canPlayAc3 = () => (testCodec('audio/mp4; codecs=\"ac3\"'));\r\nconst canPlayEc3 = () => (testCodec('audio/mp4; codecs=\"ec3\"'));\r\nconst canPlayOpus = () => (testCodec('audio/mp4; codecs=\"opus\"') || testCodec('audio/webm; codecs=\"opus\"'));\r\nconst canPlayFlac = () => (testCodec('audio/mp4; codecs=\"flac\"'));\r\nconst canPlayVorbis = () => (testCodec('audio/webm; codecs=\"vorbis\"'));\r\n\r\n// Video codec detection\r\nconst canPlayHevc = () => (testCodec('video/mp4; codecs=\"hev1.1.6.L93.90\"') || testCodec('video/mp4; codecs=\"hvc1.1.6.L93.90\"'));\r\nconst canPlayAv1 = () => (testCodec('video/mp4; codecs=\"av01.0.01M.08\"'));\r\nconst canPlayVp8 = () => (testCodec('video/webm; codecs=\"vp8\"'));\r\nconst canPlayVp9 = () => (testCodec('video/mp4; codecs=\"vp9\"') || testCodec('video/mp4; codecs=\"vp09.00.10.08\"') || testCodec('video/webm; codecs=\"vp9\"') || testCodec('video/webm; codecs=\"vp09.00.10.08\"'));\r\n\r\n// Generate compatibility map for API\r\nexport const createCompatibilityMap = () => ([\r\n    // We prefer DASH/DOWNLOAD <3\r\n    /*{\r\n        type: \"HLS\",\r\n        // Video codecs supported by HLS: H264, HEVC\r\n        video: [\r\n            { codec: \"x264\" }, // All modern browsers supports H264\r\n            ...((canPlayHevc()) ? [{ codec: \"hevc\" }] : []), // Supported by Microsoft Edge\r\n        ],\r\n        // Audio codecs supported by HLS: MP3, AC3 (Dolby Digital), EC3 (Dolby Digital Plus), AAC (AAC-LC, HE-AAC1, HE-AAC2)\r\n        audio: [\r\n            { codec: \"mp3\" }, // All modern browsers supports MP3\r\n            { codec: \"aac\" }, // All modern browsers supports AAC\r\n            ...(canPlayAc3() ? [{ codec: \"ac3\" }] : []), // Supported by Microsoft Edge\r\n            ...(canPlayEc3() ? [{ codec: \"ec3\" }] : []), // Supported by Microsoft Edge\r\n        ]\r\n    },*/ {\r\n        type: \"DOWNLOAD\",\r\n        format: [\r\n            { container: \"mp4\" },\r\n            { container: \"webm\" },\r\n        ],\r\n        video: [\r\n            { codec: \"x264\" }, // All modern browsers supports H264\r\n            ...(canPlayHevc() ? [{ codec: \"hevc\" }] : []), // Supported by Microsoft Edge\r\n            ...(canPlayAv1() ? [{ codec: \"av1\" }] : []), // Supported by Chrome and Firefox\r\n            ...(canPlayVp8() ? [{ codec: \"vp8\" }] : []), // Supported by Chrome, Firefox and Microsoft Edge\r\n            ...(canPlayVp9() ? [{ codec: \"vp9\" }] : []), // Supported by Chrome and Firefox\r\n        ],\r\n        audio: [ // Audio codecs supported by HLS: MP3, AC3 (Dolby Digital), EC3 (Dolby Digital Plus), AAC (AAC-LC, HE-AAC1, HE-AAC2)\r\n            { codec: \"mp3\" }, // All modern browsers supports MP3\r\n            { codec: \"aac\" }, // All modern browsers supports AAC\r\n            ...(canPlayAc3() ? [{ codec: \"ac3\" }] : []), // Supported by Microsoft Edge\r\n            ...(canPlayEc3() ? [{ codec: \"ec3\" }] : []), // Supported by Microsoft Edge\r\n            ...(canPlayOpus() ? [{ codec: \"opus\" }] : []), // Supported by Chrome, Firefox and Microsoft Edge\r\n            ...(canPlayFlac() ? [{ codec: \"flac\" }] : []), // Supported by Chrome, Firefox and Microsoft Edge\r\n            ...(canPlayVorbis() ? [{ codec: \"vorbis\" }] : []), // Supported by Chrome, Firefox and Microsoft Edge\r\n        ],\r\n        maxAudioTrack: 1,\r\n        maxVideoTrack: 1\r\n    }, {\r\n        type: \"DASH\",\r\n        video: [\r\n            { codec: \"x264\" }, // All modern browsers supports H264\r\n            ...(canPlayHevc() ? [{ codec: \"hevc\" }] : []), // Supported by Microsoft Edge\r\n            ...(canPlayAv1() ? [{ codec: \"av1\" }] : []), // Supported by Chrome and Firefox\r\n            ...(canPlayVp8() ? [{ codec: \"vp8\" }] : []), // Supported by Chrome, Firefox and Microsoft Edge\r\n            ...(canPlayVp9() ? [{ codec: \"vp9\" }] : []), // Supported by Chrome and Firefox\r\n        ],\r\n        audio: [ // Audio codecs supported by HLS: MP3, AC-3 (Dolby Digital), EC-3 (Dolby Digital Plus), AAC (AAC-LC, HE-AAC1, HE-AAC2)\r\n            { codec: \"mp3\" }, // All modern browsers supports MP3\r\n            { codec: \"aac\" }, // All modern browsers supports AAC\r\n            ...(canPlayAc3() ? [{ codec: \"ac3\" }] : []), // Supported by Microsoft Edge\r\n            ...(canPlayEc3() ? [{ codec: \"ec3\" }] : []), // Supported by Microsoft Edge\r\n            ...(canPlayOpus() ? [{ codec: \"opus\" }] : []), // Supported by Chrome, Firefox and Microsoft Edge\r\n            ...(canPlayFlac() ? [{ codec: \"flac\" }] : []), // Supported by Chrome, Firefox and Microsoft Edge\r\n            ...(canPlayVorbis() ? [{ codec: \"vorbis\" }] : []), // Supported by Chrome, Firefox and Microsoft Edge\r\n        ]\r\n    }\r\n]);\r\n\r\nconsole.log('COMPATIBILITY_MAP', createCompatibilityMap());","import { API_URL } from \"../config\";\r\nimport { createCompatibilityMap } from \"./codecMap\";\r\n\r\nexport const analyze = async (url) => {\r\n    const data = fetch(`${API_URL}media/analyze`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n            url,\r\n            supported: createCompatibilityMap()\r\n        })\r\n    }).then(d => d.json())\r\n    return data;\r\n}\r\n\r\nexport const start = async (url = '', profile = 0, videoTrack = 0, audioTracks = [0], subTracks = []) => {\r\n    const data = fetch(`${API_URL}session`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n            url,\r\n            profile,\r\n            video: videoTrack,\r\n            audio: audioTracks[0],\r\n            subtitle: '',\r\n            supported: createCompatibilityMap()\r\n        })\r\n    }).then(d => d.json())\r\n    return data;\r\n}\r\n\r\nexport const autoStart = async (url, maxBitrate = 15000) => {\r\n    console.log(`Selecting profiles matching with maxBitrate=${maxBitrate}`);\r\n    const data = await analyze(url);\r\n    const profiles = data.profiles.filter((p) => (p.bitrate <= maxBitrate));\r\n    console.log('File scan', data)\r\n    const startData = await start(url, profiles[profiles.length - 1].id, data.tracks.video[0].id, data.tracks.audio.map((a) => (a.id)), []);\r\n    console.log('Session', startData);\r\n    return startData;\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './style.module.css';\r\n\r\nconst PlayerBasic = ({ url = '' }) =>  <video src={url} className={style.player} autoPlay width=\"1920\" height=\"1080\" controls/>;\r\n\r\nPlayerBasic.propTypes = {\r\n    url: PropTypes.string\r\n};\r\n\r\nexport default PlayerBasic;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './style.module.css';\r\nimport Home from '../Home';\r\nimport PlayerShaka from '../PlayerShaka';\r\nimport { autoStart } from '../../api/transcoder';\r\nimport PlayerBasic from '../PlayerBasic';\r\n\r\nconst App = () => {\r\n    const [url, setUrl] = useState(false);\r\n    const [session, setSession] = useState(false);\r\n    \r\n    const onStart = (newUrl) => {\r\n        localStorage.setItem('lastUrl', newUrl);\r\n        setUrl(newUrl);\r\n        autoStart(newUrl, 10000).then((data) => {\r\n            setSession(data.session)\r\n        })\r\n    }\r\n    return <div className={style.home}>\r\n       {!session && <Home onChange={onStart} loading={url !== false} value={localStorage.getItem('lastUrl')} />}\r\n       {session && session.stream && session.stream.type === \"DASH\" && <PlayerShaka url={session.stream.url} />}\r\n       {session && session.stream && session.stream.type === \"DOWNLOAD\" && <PlayerBasic url={session.stream.url} />}\r\n    </div>\r\n};\r\n\r\nApp.propTypes = {\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport \"./api/codecMap\";\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"style_home__P0ecC\",\"field\":\"style_field__3E_ai\",\"message\":\"style_message__3qffF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"style_spinner__3ucoZ\",\"spinner1\":\"style_spinner1__3c814\",\"spinner2\":\"style_spinner2__1k_LD\",\"spinner3\":\"style_spinner3__3rqaT\"};"],"sourceRoot":""}