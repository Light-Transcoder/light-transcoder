{"version":3,"sources":["components/Spinner/style.module.css","components/PlayerBasic/style.module.css","components/PlayerDash/style.module.css","components/Home/style.module.css","components/Spinner/index.jsx","components/Home/index.jsx","config.js","api/codecMap.js","api/transcoder.js","components/PlayerBasic/index.jsx","components/PlayerDash/index.jsx","components/PlayerHLS/index.jsx","components/App/index.jsx","index.js"],"names":["module","exports","Spinner","className","style","spinner","Home","onChange","loading","value","home","field","defaultValue","readOnly","placeholder","onKeyDown","e","keyCode","target","message","select","id","window","bitrateLimit","parseInt","API_URL","testCodec","type","document","createElement","canPlayType","canPlayAc3","canPlayEc3","canPlayOpus","canPlayFlac","canPlayVorbis","canPlayHevc","canPlayAv1","canPlayVp8","canPlayVp9","createCompatibilityMap","video","codec","audio","format","container","maxAudioTrack","maxVideoTrack","console","log","analyze","url","a","async","data","fetch","method","headers","body","JSON","stringify","supported","then","d","json","start","profile","videoTrack","audioTracks","subtitle","PlayerBasic","src","player","autoPlay","width","height","controls","PlayerDash","props","ref","React","createRef","this","Shaka","polyfill","installAll","Player","isBrowserSupported","current","configure","streaming","retryParameters","timeout","maxAttempts","baseDelay","backoffFactor","fuzzFactor","addEventListener","event","error","detail","code","load","catch","_player","Component","PlayerHLS","muxjs","propTypes","PropTypes","string","App","useState","setUrl","session","setSession","newUrl","localStorage","setItem","maxBitrate","profiles","filter","p","bitrate","length","tracks","map","startData","autoStart","getItem","stream","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c48dc3e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"style_spinner__wAv59\",\"spinner1\":\"style_spinner1__GawAE\",\"spinner2\":\"style_spinner2__1q-vU\",\"spinner3\":\"style_spinner3__1UQzU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"style_player__1Wy7F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"style_player__1b_eF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"style_home__2b00V\",\"field\":\"style_field__3v_8e\",\"message\":\"style_message__ccoOX\",\"select\":\"style_select__1vHJm\"};","import React from 'react';\r\nimport style from './style.module.css';\r\n\r\nconst Spinner = () => <div className={style.spinner}><div/><div/><div/><div/></div>;\r\n\r\nSpinner.propTypes = {\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport style from './style.module.css';\r\nimport Spinner from '../Spinner';\r\n\r\nconst Home = ({ onChange = () => { }, loading = false, value = '' }) => <div className={style.home}>\r\n    <input className={style.field} defaultValue={value} readOnly={loading} placeholder=\"https://mywebsite.com/myfile.mkv\" onKeyDown={(e) => { if (e.keyCode === 13) { onChange(e.target.value); } }} />\r\n    <div className={style.message}>\r\n        Bitrate:\r\n     <select className={style.select} id=\"bitrate\" defaultValue={window.bitrateLimit} onChange={(e) => (window.bitrateLimit = parseInt(e.target.value, 10))}>\r\n            <option value=\"-1\">Maximum</option>\r\n            <option value=\"140000\">140Mbit/s (8k)</option>\r\n            <option value=\"80000\">80Mbit/s (4k)</option>\r\n            <option value=\"70000\">70Mbit/s (4k)</option>\r\n            <option value=\"60000\">60Mbit/s (4k)</option>\r\n            <option value=\"50000\">50Mbit/s (4k)</option>\r\n            <option value=\"30000\">30Mbit/s (1440p)</option>\r\n            <option value=\"22000\">22Mbit/s (1440p)</option>\r\n            <option value=\"20000\">20Mbit/s (1080p)</option>\r\n            <option value=\"12000\">12Mbit/s (1080p)</option>\r\n            <option value=\"10000\">10Mbit/s (1080p)</option>\r\n            <option value=\"8000\">8Mbit/s (1080p)</option>\r\n            <option value=\"4000\">4Mbit/s (720p)</option>\r\n            <option value=\"3000\">3Mbit/s (720p)</option>\r\n            <option value=\"2000\">2Mbit/s (720p)</option>\r\n            <option value=\"1750\">1.75Mbit/s (576p)</option>\r\n            <option value=\"1250\">1.25Mbit/s (480p)</option>\r\n            <option value=\"750\">0.75Mbit/s (350p)</option>\r\n            <option value=\"500\">0.5Mbit/s (240p)</option>\r\n            <option value=\"250\">0.25Mbit/s (160p)</option>\r\n        </select>\r\n    </div>\r\n    <div className={style.message}>❤ It's easy! Choose your quality, paste a media file link and press enter ❤</div>\r\n    {loading && <Spinner />}\r\n</div>;\r\n\r\nHome.propTypes = {\r\n};\r\n\r\nexport default Home;\r\n","export const API_URL = 'http://localhost:8585/';","const testCodec = (type) => {\r\n    return document.createElement('video').canPlayType(type);\r\n}\r\n\r\n// Audio codec detection\r\nconst canPlayAc3 = () => (testCodec('audio/mp4; codecs=\"ac3\"'));\r\nconst canPlayEc3 = () => (testCodec('audio/mp4; codecs=\"ec3\"'));\r\nconst canPlayOpus = () => (testCodec('audio/mp4; codecs=\"opus\"') || testCodec('audio/webm; codecs=\"opus\"'));\r\nconst canPlayFlac = () => (testCodec('audio/mp4; codecs=\"flac\"'));\r\nconst canPlayVorbis = () => (testCodec('audio/webm; codecs=\"vorbis\"'));\r\n\r\n// Video codec detection\r\nconst canPlayHevc = () => (testCodec('video/mp4; codecs=\"hev1.1.6.L93.90\"') || testCodec('video/mp4; codecs=\"hvc1.1.6.L93.90\"'));\r\nconst canPlayAv1 = () => (testCodec('video/mp4; codecs=\"av01.0.01M.08\"'));\r\nconst canPlayVp8 = () => (testCodec('video/webm; codecs=\"vp8\"'));\r\nconst canPlayVp9 = () => (testCodec('video/mp4; codecs=\"vp9\"') || testCodec('video/mp4; codecs=\"vp09.00.10.08\"') || testCodec('video/webm; codecs=\"vp9\"') || testCodec('video/webm; codecs=\"vp09.00.10.08\"'));\r\n\r\n// Generate compatibility map for API\r\nexport const createCompatibilityMap = () => ([\r\n    // We prefer DASH/DOWNLOAD <3\r\n    {\r\n        type: \"HLS\",\r\n        // Video codecs supported by HLS: H264, HEVC\r\n        video: [\r\n            { codec: \"h264\" }, // All modern browsers supports H264\r\n            ...((canPlayHevc()) ? [{ codec: \"hevc\" }] : []), // Supported by Microsoft Edge\r\n        ],\r\n        // Audio codecs supported by HLS: MP3, AC3 (Dolby Digital), EC3 (Dolby Digital Plus), AAC (AAC-LC, HE-AAC1, HE-AAC2)\r\n        audio: [\r\n            { codec: \"mp3\" }, // All modern browsers supports MP3\r\n            { codec: \"aac\" }, // All modern browsers supports AAC\r\n            ...(canPlayAc3() ? [{ codec: \"ac3\" }] : []), // Supported by Microsoft Edge\r\n            ...(canPlayEc3() ? [{ codec: \"ec3\" }] : []), // Supported by Microsoft Edge\r\n        ]\r\n    }, {\r\n        type: \"DOWNLOAD\",\r\n        format: [\r\n            { container: \"mp4\" },\r\n            { container: \"webm\" },\r\n        ],\r\n        video: [\r\n            { codec: \"h264\" }, // All modern browsers supports H264\r\n            ...(canPlayHevc() ? [{ codec: \"hevc\" }] : []), // Supported by Microsoft Edge\r\n            ...(canPlayAv1() ? [{ codec: \"av1\" }] : []), // Supported by Chrome and Firefox\r\n            ...(canPlayVp8() ? [{ codec: \"vp8\" }] : []), // Supported by Chrome, Firefox and Microsoft Edge\r\n            ...(canPlayVp9() ? [{ codec: \"vp9\" }] : []), // Supported by Chrome and Firefox\r\n        ],\r\n        audio: [ // Audio codecs supported by HLS: MP3, AC3 (Dolby Digital), EC3 (Dolby Digital Plus), AAC (AAC-LC, HE-AAC1, HE-AAC2)\r\n            { codec: \"mp3\" }, // All modern browsers supports MP3\r\n            { codec: \"aac\" }, // All modern browsers supports AAC\r\n            ...(canPlayAc3() ? [{ codec: \"ac3\" }] : []), // Supported by Microsoft Edge\r\n            ...(canPlayEc3() ? [{ codec: \"ec3\" }] : []), // Supported by Microsoft Edge\r\n            ...(canPlayOpus() ? [{ codec: \"opus\" }] : []), // Supported by Chrome, Firefox and Microsoft Edge\r\n            ...(canPlayFlac() ? [{ codec: \"flac\" }] : []), // Supported by Chrome, Firefox and Microsoft Edge\r\n            ...(canPlayVorbis() ? [{ codec: \"vorbis\" }] : []), // Supported by Chrome, Firefox and Microsoft Edge\r\n        ],\r\n        maxAudioTrack: 1,\r\n        maxVideoTrack: 1\r\n    }, {\r\n        type: \"DASH\",\r\n        video: [\r\n            { codec: \"h264\" }, // All modern browsers supports H264\r\n            ...(canPlayHevc() ? [{ codec: \"hevc\" }] : []), // Supported by Microsoft Edge\r\n            ...(canPlayAv1() ? [{ codec: \"av1\" }] : []), // Supported by Chrome and Firefox\r\n            ...(canPlayVp8() ? [{ codec: \"vp8\" }] : []), // Supported by Chrome, Firefox and Microsoft Edge\r\n            ...(canPlayVp9() ? [{ codec: \"vp9\" }] : []), // Supported by Chrome and Firefox\r\n        ],\r\n        audio: [ // Audio codecs supported by HLS: MP3, AC-3 (Dolby Digital), EC-3 (Dolby Digital Plus), AAC (AAC-LC, HE-AAC1, HE-AAC2)\r\n            { codec: \"mp3\" }, // All modern browsers supports MP3\r\n            { codec: \"aac\" }, // All modern browsers supports AAC\r\n            ...(canPlayAc3() ? [{ codec: \"ac3\" }] : []), // Supported by Microsoft Edge\r\n            ...(canPlayEc3() ? [{ codec: \"ec3\" }] : []), // Supported by Microsoft Edge\r\n            ...(canPlayOpus() ? [{ codec: \"opus\" }] : []), // Supported by Chrome, Firefox and Microsoft Edge\r\n            ...(canPlayFlac() ? [{ codec: \"flac\" }] : []), // Supported by Chrome, Firefox and Microsoft Edge\r\n            ...(canPlayVorbis() ? [{ codec: \"vorbis\" }] : []), // Supported by Chrome, Firefox and Microsoft Edge\r\n        ]\r\n    }\r\n]);\r\n\r\nconsole.log('COMPATIBILITY_MAP', createCompatibilityMap());","import { API_URL } from \"../config\";\r\nimport { createCompatibilityMap } from \"./codecMap\";\r\n\r\nexport const analyze = async (url) => {\r\n    const data = fetch(`${API_URL}media/analyze`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n            url,\r\n            supported: createCompatibilityMap()\r\n        })\r\n    }).then(d => d.json())\r\n    return data;\r\n}\r\n\r\nexport const start = async (url = '', profile = 0, videoTrack = 0, audioTracks = [0], subTracks = []) => {\r\n    const data = fetch(`${API_URL}session`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n            url,\r\n            profile,\r\n            video: videoTrack,\r\n            audio: audioTracks[0],\r\n            subtitle: '',\r\n            supported: createCompatibilityMap()\r\n        })\r\n    }).then(d => d.json())\r\n    return data;\r\n}\r\n\r\nexport const autoStart = async (url, maxBitrate = 15000) => {\r\n    console.log(`Selecting profiles matching with maxBitrate=${maxBitrate}`);\r\n    const data = await analyze(url);\r\n    const profiles = data.profiles.filter((p) => (p.bitrate <= maxBitrate || maxBitrate === -1));\r\n    console.log('File scan', data)\r\n    const startData = await start(url, profiles[profiles.length - 1].id, data.tracks.video[0].id, data.tracks.audio.map((a) => (a.id)), []);\r\n    console.log('Session', startData);\r\n    return startData;\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './style.module.css';\r\n\r\nconst PlayerBasic = ({ url = '' }) =>  <video src={url} className={style.player} autoPlay width=\"1920\" height=\"1080\" controls/>;\r\n\r\nPlayerBasic.propTypes = {\r\n    url: PropTypes.string\r\n};\r\n\r\nexport default PlayerBasic;\r\n","import React from 'react';\r\nimport Shaka from 'shaka-player';\r\nimport PropTypes from 'prop-types';\r\nimport style from './style.module.css';\r\n\r\nclass PlayerDash extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.ref = React.createRef();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <video ref={this.ref} className={style.player} autoPlay width=\"1920\" height=\"1080\" controls />\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Install polyfills\r\n        Shaka.polyfill.installAll();\r\n\r\n        // Test compatibility\r\n        if (!Shaka.Player.isBrowserSupported()) {\r\n            console.error('Browser not supported!');\r\n            return;\r\n        }\r\n\r\n        // Init Shaka Player\r\n        const player = new Shaka.Player(this.ref.current);\r\n        player.configure({\r\n            streaming: {\r\n                retryParameters: {\r\n                    timeout: 10000,\r\n                    maxAttempts: 50,\r\n                    baseDelay: 0,\r\n                    backoffFactor: 0,\r\n                    fuzzFactor: 0,\r\n                }\r\n            }\r\n        });\r\n\r\n        // Error handling\r\n        player.addEventListener('error', (event) => {\r\n            console.error('Error code', event.detail.code, 'object', event.detail);\r\n        });\r\n        player.load(this.props.url).then(() => {\r\n            console.log('The video has now been loaded!');\r\n        }).catch((error) => {\r\n            console.error('Error code', error.code, 'object', error);\r\n        });\r\n\r\n        // Assign to window to enable debug \r\n        window._player = player;\r\n    }\r\n}\r\n\r\nPlayerDash.propTypes = {\r\n    url: PropTypes.string\r\n};\r\n\r\nexport default PlayerDash;\r\n","import muxjs from \"mux.js\";\r\nimport PropTypes from 'prop-types';\r\nimport PlayerDash from '../PlayerDash';\r\n\r\nclass PlayerHLS extends PlayerDash {\r\n    componentDidMount() {\r\n        window.muxjs = muxjs;\r\n        super.componentDidMount();\r\n    }\r\n}\r\n\r\nPlayerHLS.propTypes = {\r\n    url: PropTypes.string\r\n};\r\n\r\nexport default PlayerHLS;\r\n","import React, { useState } from 'react';\r\nimport style from './style.module.css';\r\nimport Home from '../Home';\r\nimport { autoStart } from '../../api/transcoder';\r\nimport PlayerBasic from '../PlayerBasic';\r\nimport PlayerDash from '../PlayerDash';\r\nimport PlayerHLS from '../PlayerHLS';\r\n\r\nconst App = () => {\r\n    const [url, setUrl] = useState(false);\r\n    const [session, setSession] = useState(false);\r\n    \r\n    const onStart = (newUrl) => {\r\n        localStorage.setItem('lastUrl', newUrl);\r\n        setUrl(newUrl);\r\n        autoStart(newUrl, window.bitrateLimit).then((data) => {\r\n            setSession(data.session)\r\n        })\r\n    }\r\n    return <div className={style.home}>\r\n       {!session && <Home onChange={onStart} loading={url !== false} value={localStorage.getItem('lastUrl')} />}\r\n       {session && session.stream && (session.stream.type === \"DASH\") && <PlayerDash url={session.stream.url} />}\r\n       {session && session.stream && (session.stream.type === \"HLS\") && <PlayerHLS url={session.stream.url} />}\r\n       {session && session.stream && session.stream.type === \"DOWNLOAD\" && <PlayerBasic url={session.stream.url} />}\r\n    </div>\r\n};\r\n\r\nApp.propTypes = {\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport \"./api/codecMap\";\n\n// Default bitrate\nwindow.bitrateLimit = 8000;\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}