{"version":3,"sources":["components/PlayerShaka/style.module.css","components/PlayerBasic/style.module.css","components/Home/style.module.css","components/Spinner/index.jsx","components/Home/index.jsx","components/PlayerShaka/index.jsx","config.js","api/transcoder.js","components/PlayerBasic/index.jsx","components/App/index.jsx","index.js","components/Spinner/style.module.css"],"names":["module","exports","Spinner","className","style","spinner","Home","onChange","loading","value","home","field","defaultValue","readOnly","placeholder","onKeyDown","e","keyCode","target","message","PlayerShaka","props","ref","React","createRef","this","player","autoPlay","width","height","controls","Shaka","polyfill","installAll","Player","isBrowserSupported","current","configure","streaming","retryParameters","timeout","maxAttempts","baseDelay","backoffFactor","fuzzFactor","addEventListener","event","console","error","detail","code","load","url","then","log","catch","window","_player","Component","API_URL","analyze","a","async","data","fetch","method","headers","body","JSON","stringify","d","json","start","profile","videoTrack","audioTracks","video","audio","subtitle","protocol","supported","PlayerBasic","src","App","useState","setUrl","session","setSession","newUrl","localStorage","setItem","maxBitrate","profiles","filter","p","bitrate","length","id","tracks","map","startData","autoStart","getItem","stream","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51740713.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"style_player__19nHK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"style_player__wFyAB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"style_home__P0ecC\",\"field\":\"style_field__3E_ai\",\"message\":\"style_message__3qffF\"};","import React from 'react';\r\nimport style from './style.module.css';\r\n\r\nconst Spinner = () => <div className={style.spinner}><div/><div/><div/><div/></div>;\r\n\r\nSpinner.propTypes = {\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './style.module.css';\r\nimport Spinner from '../Spinner';\r\n\r\nconst Home = ({ onChange = () => { }, loading = false, value = '' }) => <div className={style.home}>\r\n    <input className={style.field} defaultValue={value} readOnly={loading} placeholder=\"https://mywebsite.com/myfile.mkv\" onKeyDown={(e) => { if (e.keyCode === 13) { onChange(e.target.value); } }} />\r\n     <div className={style.message}>(Default bitrate: 10Mbit/s)</div>    \r\n     <div className={style.message}>It's easy! Paste a media file link and press enter ;)</div>\r\n    {loading && <Spinner />}\r\n</div>;\r\n\r\nHome.propTypes = {\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport Shaka from 'shaka-player';\r\nimport PropTypes from 'prop-types';\r\nimport style from './style.module.css';\r\nimport Spinner from '../Spinner';\r\n\r\nclass PlayerShaka extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.ref = React.createRef();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <video ref={this.ref} className={style.player} autoPlay width=\"1920\" height=\"1080\" controls/>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Install polyfills\r\n        Shaka.polyfill.installAll();\r\n\r\n        // Test compatibility\r\n        if (!Shaka.Player.isBrowserSupported()) {\r\n            console.error('Browser not supported!');\r\n            return;\r\n        }\r\n\r\n        // Init Shaka Player\r\n        const player = new Shaka.Player(this.ref.current);\r\n        player.configure({\r\n            streaming: {\r\n                retryParameters: {\r\n                    timeout: 10000,\r\n                    maxAttempts: 50,\r\n                    baseDelay: 0,\r\n                    backoffFactor: 0,\r\n                    fuzzFactor: 0,\r\n                }\r\n            }\r\n        });\r\n\r\n        // Error handling\r\n        player.addEventListener('error', (event) => {\r\n            console.error('Error code', event.detail.code, 'object', event.detail);\r\n        });\r\n        player.load(this.props.url).then(() => {\r\n            console.log('The video has now been loaded!');\r\n        }).catch((error) => {\r\n            console.error('Error code', error.code, 'object', error);\r\n        });\r\n\r\n        // Assign to window to enable debug \r\n        window._player = player;\r\n    }\r\n}\r\n\r\nPlayerShaka.propTypes = {\r\n    url: PropTypes.string\r\n};\r\n\r\nexport default PlayerShaka;\r\n","export const API_URL = 'http://localhost:8585/';","import { API_URL } from \"../config\";\r\n\r\nexport const analyze = async (url) => {\r\n    const data = fetch(`${API_URL}media/analyze`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ url })\r\n    }).then(d => d.json())\r\n    return data;\r\n}\r\n\r\nexport const start = async (url = '', profile = 0, videoTrack = 0, audioTracks = [0], subTracks = []) => {\r\n    const data = fetch(`${API_URL}session`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n            url,\r\n            profile,\r\n            video: videoTrack,\r\n            audio: audioTracks[0],\r\n            subtitle: '',\r\n            protocol: 'DASH', // In the future, the server will choose the protocol based on compatibility map, not the client\r\n            supported: [{ // Example, not supportd yet\r\n                \"type\": \"HLS\",\r\n                \"video\": [\r\n                    { \"codec\": \"h264\" },\r\n                    { \"codec\": \"webm\" },\r\n                ],\r\n                \"audio\": [\r\n                    { \"codec\": \"aac\" },\r\n                    { \"codec\": \"ogg\" },\r\n                ]\r\n            }]\r\n        })\r\n    }).then(d => d.json())\r\n    return data;\r\n}\r\n\r\nexport const autoStart = async (url, maxBitrate = 15000) => {\r\n    console.log(`Selecting profiles matching with maxBitrate=${maxBitrate}`);\r\n    const data = await analyze(url);\r\n    const profiles = data.profiles.filter((p) => (p.bitrate <= maxBitrate));\r\n    console.log('File scan', data)\r\n    const startData = await start(url, profiles[profiles.length - 1].id, data.tracks.video[0].id, data.tracks.audio.map((a) => (a.id)), []);\r\n    console.log('Session', startData);\r\n    return startData;\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './style.module.css';\r\n\r\nconst PlayerBasic = ({ url = '' }) =>  <video src={url} className={style.player} autoPlay width=\"1920\" height=\"1080\" controls/>;\r\n\r\nPlayerBasic.propTypes = {\r\n    url: PropTypes.string\r\n};\r\n\r\nexport default PlayerBasic;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './style.module.css';\r\nimport Home from '../Home';\r\nimport PlayerShaka from '../PlayerShaka';\r\nimport { autoStart } from '../../api/transcoder';\r\nimport PlayerBasic from '../PlayerBasic';\r\n\r\nconst App = () => {\r\n    const [url, setUrl] = useState(false);\r\n    const [session, setSession] = useState(false);\r\n    \r\n    const onStart = (newUrl) => {\r\n        localStorage.setItem('lastUrl', newUrl);\r\n        setUrl(newUrl);\r\n        autoStart(newUrl, 10000).then((data) => {\r\n            setSession(data.session)\r\n        })\r\n    }\r\n    return <div className={style.home}>\r\n       {!session && <Home onChange={onStart} loading={url !== false} value={localStorage.getItem('lastUrl')} />}\r\n       {session && session.stream && session.stream.type === \"DASH\" && <PlayerShaka url={session.stream.url} />}\r\n       {session && session.stream && session.stream.type === \"DIRECT\" && <PlayerBasic url={session.stream.url} />}\r\n    </div>\r\n};\r\n\r\nApp.propTypes = {\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"style_spinner__3ucoZ\",\"spinner1\":\"style_spinner1__3c814\",\"spinner2\":\"style_spinner2__1k_LD\",\"spinner3\":\"style_spinner3__3rqaT\"};"],"sourceRoot":""}